proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream next_upstream {
  server next:3000;
}

upstream strapi_upstream {
  server strapi:1337;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;

  server_name _;
  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/xr-patterns.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/xr-patterns.com/privkey.pem;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  client_max_body_size 100M;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location /.well-known/acme-challenge/ {
      root /var/www/certbot;
  }

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://next_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://next_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /uploads {
    proxy_pass http://strapi_upstream/uploads;
    proxy_cache STATIC;
    expires 2d;
    add_header Cache-Control "public, no-transform";
    add_header ETag "";
  }

  location /admin {
    proxy_pass http://strapi_upstream/admin;
  }

  location /content-manager {
    proxy_pass http://strapi_upstream/content-manager;
  }

  location /upload {
    proxy_pass http://strapi_upstream/upload;
  }

  location /api {
    rewrite /api/(.*) /$1  break;
    proxy_pass http://strapi_upstream;
  }

  location / {
    proxy_pass http://next_upstream;
  }
}